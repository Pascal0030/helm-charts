## @section Global parameters
global:
  ## @param global.imageRegistry Global Docker Image registry
  imageRegistry: ""
  ## @param global.imagePullSecrets Global Docker registry secret names as an array
  imagePullSecrets: []

## @section Common parameters
## @param nameOverride String to partially override nzbget.fullname
nameOverride: ""
## @param fullnameOverride String to fully override nzbget.fullname
fullnameOverride: ""
## @param commonLabels Labels to add to all deployed objects
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
commonAnnotations: {}

## @section NZBGet image parameters
image:
  ## @param image.registry NZBGet image registry
  registry: docker.io
  ## @param image.repository NZBGet image repository
  repository: linuxserver/nzbget
  ## @param image.tag NZBGet image tag (immutable tags are recommended)
  tag: ""
  ## @param image.pullPolicy NZBGet image pull policy
  imagePullPolicy: Always

## @section NZBGet Authentication parameters
auth:
  ## @param auth.username NZBGet custom user name
  username: "admin"
  ## @param auth.createSecret Automatically create a secret for NZBGet credentials
  createSecret: true
  ## @param auth.existingSecret Name of existing secret to use for NZBGet credentials
  existingSecret: ""
  secretKeys:
    userNameKey: user
    userPasswordKey: password

## @section NZBGet configuration parameters
config:
  ## @param config.existingConfigMap Name of existing ConfigMap with NZBGet configuration (use secret or existing configmap but not both)
  existingConfigMap: ""
  ## @param config.existingSecret Name of existing secret with the NZBGet configuration
  existingSecret: ""
  ## @param config.useExternalSecret Use ExternalSecret to template the nzbget.conf with secrets from a the configmap and secrets manager
  useExternalSecret: false
  externalSecret:
    refreshInterval: 1h
    secretStoreRef:
      name: ""
      kind: ""
    target:
      template:
        engineVersion: v2
    data: []
    ## - secretKey: username
    ##   remoteRef:
    ##     key: ""
    ## - secretKey: password
    ##   remoteRef:
    ##     key: ""
  ## @param config.nzbgetconfig Custom configuration for NZBGet (nzbget.conf)
  nzbgetconfig: |
    MainDir=/config
    DestDir=/downloads/completed
    InterDir=/downloads/intermediate
    NzbDir=${MainDir}/nzb
    QueueDir=${MainDir}/queue
    TempDir=${MainDir}/tmp
    WebDir=${AppDir}/webui
    ScriptDir=${MainDir}/scripts
    LockFile=${MainDir}/nzbget.lock
    LogFile=${MainDir}/nzbget.log
    ConfigTemplate=${AppDir}/webui/nzbget.conf.template
    RequiredDir=
    CertStore=${AppDir}/cacert.pem
    Server1.Active=yes
    Server1.Name=eweka
    Server1.Level=0
    Server1.Optional=no
    Server1.Group=0
    Server1.Host=news.eweka.nl
    Server1.Encryption=yes
    Server1.Port=443
    Server1.Username=
    Server1.Password=
    Server1.JoinGroup=no
    Server1.Cipher=
    Server1.Connections=20
    Server1.Retention=6191
    Server1.CertVerification=strict
    Server1.IpVersion=auto
    Server1.Notes=
    ControlIP=0.0.0.0
    ControlPort=6789
    RestrictedUsername=
    RestrictedPassword=
    AddUsername=
    AddPassword=
    FormAuth=no
    SecureControl=no
    SecurePort=6791
    SecureCert=
    SecureKey=
    AuthorizedIP=127.0.0.1
    CertCheck=yes
    UpdateCheck=stable
    DaemonUsername=root
    UMask=1000
    Category1.Name=movies
    Category1.DestDir=/downloads/downloads/movies
    Category1.Unpack=yes
    Category1.Extensions=
    Category1.Aliases=
    Category2.Name=series
    Category2.DestDir=/downloads/downloads/series
    Category3.Name=music
    Category3.DestDir=/downloads/downloads/music
    Category4.Name=software
    Category4.DestDir=/downloads/downloads/software
    AppendCategoryDir=yes
    NzbDirInterval=5
    NzbDirFileAge=60
    DupeCheck=yes
    FlushQueue=no
    ContinuePartial=no
    PropagationDelay=0
    ArticleCache=250
    DirectWrite=yes
    WriteBuffer=1024
    FileNaming=auto
    RenameAfterUnpack=yes
    RenameIgnoreExt=.zip, .7z, .rar, .par2
    ReorderFiles=yes
    PostStrategy=rocket
    DiskSpace=250
    NzbCleanupDisk=yes
    KeepHistory=30
    FeedHistory=7
    SkipWrite=no
    RawArticle=no
    ArticleRetries=3
    ArticleInterval=10
    ArticleTimeout=60
    ArticleReadChunkSize=4
    UrlRetries=3
    UrlInterval=10
    UrlTimeout=60
    RemoteTimeout=90
    DownloadRate=0
    UrlConnections=25
    UrlForce=yes
    MonthlyQuota=0
    QuotaStartDay=1
    DailyQuota=0
    WriteLog=append
    RotateLog=3
    ErrorTarget=both
    WarningTarget=both
    InfoTarget=screen
    DetailTarget=log
    DebugTarget=log
    LogBuffer=1000
    NzbLog=yes
    CrashTrace=yes
    CrashDump=no
    TimeCorrection=0
    OutputMode=curses
    CursesNzbName=yes
    CursesGroup=no
    CursesTime=no
    UpdateInterval=200
    CrcCheck=yes
    ParCheck=auto
    ParRepair=yes
    ParScan=extended
    ParQuick=yes
    ParBuffer=16
    ParThreads=0
    ParIgnoreExt=.sfv, .nzb, .nfo
    ParRename=yes
    RarRename=yes
    DirectRename=no
    HealthCheck=park
    ParTimeLimit=0
    ParPauseQueue=no
    Unpack=yes
    DirectUnpack=no
    UnpackPauseQueue=no
    UnpackCleanupDisk=yes
    UnrarCmd=unrar
    SevenZipCmd=7z
    ExtCleanupDisk=.par2, .sfv
    UnpackIgnoreExt=.cbr
    UnpackPassFile=
    Extensions=
    ScriptOrder=
    ScriptPauseQueue=no
    ShellOverride=
    EventInterval=0

## @section NZBGet service parameters
service:
  ## @param service.type NZBGet service type
  type: ClusterIP
  ## @param service.port NZBGet service port
  port: 6789
  ## @param service.nodePort Node port for NZBGet service
  nodePort: ""
  ## @param service.clusterIP Static cluster IP or "None" for headless service
  clusterIP: ""
  ## @param service.annotations Additional custom annotations for NZBGet service
  annotations: {}

## @section Persistence parameters
persistence:
  ## @param persistence.enabled Enable NZBGet data persistence using PVC
  enabled: false
  ## @param persistence.storageClass PVC Storage Class for NZBGet data volume
  storageClass: ""
  ## @param persistence.accessModes PVC Access modes
  accessModes:
    - ReadWriteOnce
  ## @param persistence.size PVC Storage Request for NZBGet data volume
  size: 1Gi
  ## @param persistence.annotations Additional custom annotations for the PVC
  annotations: {}
  ## @param persistence.selector Additional labels for the PVC
  selector: {}

## @section Pod Security Context
podSecurityContext:
  ## @param podSecurityContext.enabled Enable NZBGet pod Security Context
  enabled: true
  ## @param podSecurityContext.fsGroup Set NZBGet pod's Security Context fsGroup
  fsGroup: 1000

## @section Container Security Context
containerSecurityContext:
  ## @param containerSecurityContext.runAsUser Set NZBGet container's Security Context runAsUser
  runAsUser: 1000
  ## @param containerSecurityContext.runAsGroup Set NZBGet container's Security Context runAsGroup
  runAsGroup: 1000
  ## @param containerSecurityContext.runAsNonRoot Set NZBGet container's Security Context runAsNonRoot
  runAsNonRoot: true
  ## @param containerSecurityContext.allowPrivilegeEscalation Set NZBGet container's privilege escalation
  allowPrivilegeEscalation: true

## @section Resources parameters
resources: {}
  ## @param resources.limits The resources limits for the NZBGet containers
  ## limits:
  ##   memory: 300Mi
  ## @param resources.requests The requested resources for the NZBGet containers
  ## requests:
  ##   memory: 300Mi
  ##   cpu: 100m

## @section Extra Configs
## @param env A list of additional environment Variables
env:
  - name: TZ
    value: "Europe/Zurich"
## @param extraSecrets A list of additional existing secrets that will be mounted into the container
extraSecrets: []
##  - name: secret
##    defaultMode: 0440
##    mountPath: /mnt/secret
## @param extraConfigs A list of additional existing configMaps that will be mounted into the container
extraVolumes: []
##  - name: volume
##    mountPath: /mnt/tmp
##    pvcName: pvc-001
nfsVolumes: []
##  - name: plex-media
##    mountPath: /downloads
##    nfs:
##      server: 192.168.x.x
##      path: /downloads

## @section NZBGet container's liveness probe parameters
livenessProbe:
  ## @param livenessProbe.enabled Enable livenessProbe on MariaDB containers
  enabled: true
  ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  initialDelaySeconds: 30
  ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
  periodSeconds: 10
  ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  timeoutSeconds: 1
  ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
  failureThreshold: 3
  ## @param livenessProbe.successThreshold Success threshold for livenessProbe
  successThreshold: 1

## @section NZBGet container's readiness probe parameters
readinessProbe:
  ## @param readinessProbe.enabled Enable readinessProbe on MariaDB containers
  enabled: true
  ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  initialDelaySeconds: 5
  ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
  periodSeconds: 10
  ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  timeoutSeconds: 1
  ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
  failureThreshold: 3
  ## @param readinessProbe.successThreshold Success threshold for readinessProbe
  successThreshold: 1

## @section NZBGet container's startup probe parameters
startupProbe:
  ## @param startupProbe.enabled Enable startupProbe on MariaDB containers
  enabled: false
  ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  initialDelaySeconds: 30
  ## @param startupProbe.periodSeconds Period seconds for startupProbe
  periodSeconds: 10
  ## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe
  timeoutSeconds: 1
  ## @param startupProbe.failureThreshold Failure threshold for startupProbe
  failureThreshold: 15
  ## @param startupProbe.successThreshold Success threshold for startupProbe
  successThreshold: 1

## @section Ingress parameters
ingress:
  ## @param ingress.enabled Enable ingress record generation for NZBGet
  enabled: false
  ## @param ingress.className IngressClass that will be used to implement the Ingress (Kubernetes 1.18+)
  className: ""
  ## @param ingress.annotations Additional annotations for the Ingress resource
  annotations:
    kubernetes.io/hostname: nzbget.local
  ## @param ingress.hosts An array with hosts and paths
  hosts:
    - host: nzbget.local
      paths:
        - path: /
          pathType: Prefix
  ## @param ingress.tls TLS configuration for the Ingress
  tls: []

## @section Network Policy configuration
networkPolicy:
  ## @param networkPolicy.enabled Specifies whether a NetworkPolicy should be created
  enabled: false
  ## @param networkPolicy.allowExternal Don't require client label for connections
  allowExternal: true
  ## @param networkPolicy.ingressNSMatchLabels Labels to match to allow traffic from other namespaces
  ingressNSMatchLabels: {}
  ## @param networkPolicy.ingressNSPodMatchLabels Pod labels to match to allow traffic from other namespaces
  ingressNSPodMatchLabels: {}

## @section Pod configuration
podAnnotations: {}
podLabels: {}
nodeSelector: {}
tolerations: []
affinity: {}

## @param extraObjects Array of extra objects to deploy with the release
extraObjects: []
