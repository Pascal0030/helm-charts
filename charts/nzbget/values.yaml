# Default values for nzbget.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: linuxserver/nzbget
  # This sets the pull policy for images.
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

extraEnv:
  - name: TZ
    value: "Europe/Zurich"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  # fsGroup: 2000
  runAsUser: 1000      # UID owning the directory
  runAsGroup: 1000     # GID for 'users' group (usually 100 on Synology)
  fsGroup: 1000        # Ensures group permissions on mounted volumes

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000      # UID owning the directory
  # runAsGroup: 1000     # GID for 'users' group (usually 100 on Synology)
  # fsGroup: 1000        # Ensures group permissions on mounted volumes

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 6789

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: ""
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/whitelist-source-range: "0.0.0.0/0"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: nzbget.dev.cluster.rz-castellazzi.ip-ddns.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - hosts:
        - nzbget.dev.cluster.rz-castellazzi.ip-ddns.com
      secretName: nzbget-tls

nzbgetcredentials:
  username:
    secretname: entertainment-system-nzbget.apiauth
    key: user
  password:
    secretname: entertainment-system-nzbget.apiauth
    key: password

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Additional volumes on the output Deployment definition.
volumes: 
  - name: nzbget-config
    secret:
      secretName: nzbget-config # if external secrets template v2 is not used, mount the configmap here
      items:
        - key: nzbget.conf
          path: nzbget.conf
  - name: nzbgetconfigfolder
    nfs:
      server: 192.168.50.14
      path: /k8s-dev/nzbget
  - name: plex-media
    nfs:
      server: 192.168.50.14
      path: /plex

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: nzbgetconfigfolder
    mountPath: /config
  - name: plex-media
    mountPath: /downloads

nodeSelector: {}

tolerations: []

affinity: {}

config:
  nzbgetconfig: |
    MainDir=/config
    DestDir=/downloads/completed
    InterDir=/downloads/intermediate
    NzbDir=${MainDir}/nzb
    QueueDir=${MainDir}/queue
    TempDir=${MainDir}/tmp
    WebDir=${AppDir}/webui
    ScriptDir=${MainDir}/scripts
    LockFile=${MainDir}/nzbget.lock
    LogFile=${MainDir}/nzbget.log
    ConfigTemplate=${AppDir}/webui/nzbget.conf.template
    RequiredDir=
    CertStore=${AppDir}/cacert.pem
    Server1.Active=yes
    Server1.Name=eweka
    Server1.Level=0
    Server1.Optional=no
    Server1.Group=0
    Server1.Host=news.eweka.nl
    Server1.Encryption=yes
    Server1.Port=443
    Server1.Username={{"{{ .username }}"}}
    Server1.Password={{"{{ .password }}"}}
    Server1.JoinGroup=no
    Server1.Cipher=
    Server1.Connections=20
    Server1.Retention=6191
    Server1.CertVerification=strict
    Server1.IpVersion=auto
    Server1.Notes=
    ControlIP=0.0.0.0
    ControlPort=6789
    RestrictedUsername=
    RestrictedPassword=
    AddUsername=
    AddPassword=
    FormAuth=no
    SecureControl=no
    SecurePort=6791
    SecureCert=
    SecureKey=
    AuthorizedIP=127.0.0.1
    CertCheck=yes
    UpdateCheck=stable
    DaemonUsername=root
    UMask=1000
    Category1.Name=movies
    Category1.DestDir=/downloads/downloads/movies
    Category1.Unpack=yes
    Category1.Extensions=
    Category1.Aliases=
    Category2.Name=series
    Category2.DestDir=/downloads/downloads/series
    Category3.Name=music
    Category3.DestDir=/downloads/downloads/music
    Category4.Name=software
    Category4.DestDir=/downloads/downloads/software
    AppendCategoryDir=yes
    NzbDirInterval=5
    NzbDirFileAge=60
    DupeCheck=yes
    FlushQueue=yes
    ContinuePartial=yes
    PropagationDelay=0
    ArticleCache=0
    DirectWrite=yes
    WriteBuffer=0
    FileNaming=auto
    RenameAfterUnpack=yes
    RenameIgnoreExt=.zip, .7z, .rar, .par2
    ReorderFiles=yes
    PostStrategy=rocket
    DiskSpace=250
    NzbCleanupDisk=yes
    KeepHistory=30
    FeedHistory=7
    SkipWrite=no
    RawArticle=no
    ArticleRetries=3
    ArticleInterval=10
    ArticleTimeout=60
    ArticleReadChunkSize=4
    UrlRetries=3
    UrlInterval=10
    UrlTimeout=60
    RemoteTimeout=90
    DownloadRate=0
    UrlConnections=12
    UrlForce=yes
    MonthlyQuota=0
    QuotaStartDay=1
    DailyQuota=0
    WriteLog=append
    RotateLog=3
    ErrorTarget=both
    WarningTarget=both
    InfoTarget=both
    DetailTarget=log
    DebugTarget=log
    LogBuffer=1000
    NzbLog=yes
    CrashTrace=yes
    CrashDump=no
    TimeCorrection=0
    OutputMode=curses
    CursesNzbName=yes
    CursesGroup=no
    CursesTime=no
    UpdateInterval=200
    CrcCheck=yes
    ParCheck=auto
    ParRepair=yes
    ParScan=extended
    ParQuick=yes
    ParBuffer=16
    ParThreads=0
    ParIgnoreExt=.sfv, .nzb, .nfo
    ParRename=yes
    RarRename=yes
    DirectRename=no
    HealthCheck=park
    ParTimeLimit=0
    ParPauseQueue=no
    Unpack=yes
    DirectUnpack=no
    UnpackPauseQueue=no
    UnpackCleanupDisk=yes
    UnrarCmd=unrar
    SevenZipCmd=7z
    ExtCleanupDisk=.par2, .sfv
    UnpackIgnoreExt=.cbr
    UnpackPassFile=
    Extensions=
    ScriptOrder=
    ScriptPauseQueue=no
    ShellOverride=
    EventInterval=0
