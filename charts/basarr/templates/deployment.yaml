apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "basarr.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "basarr.labels" . | nindent 4 }}
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "basarr.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "basarr.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
{{- with (include "basarr.imagePullSecrets" .) }}
{{- . | nindent 6 }}
{{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.podSecurityContext.fsGroup }}
      {{- end }}
      {{- if .Values.config.saEnabled }}
      serviceAccountName: {{ include "basarr.fullname" . }}-sa
      {{- end }}
      containers:
        - name: basarr
          image: {{ include "basarr.image" . }}
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          securityContext: {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          {{- if .Values.env }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
          {{- end }}
            - name: basarr__LOG__LEVEL
              value: {{ .Values.config.logLevel | default "debug" | quote }}
            - name: basarr__AUTH__METHOD
              value: {{ .Values.auth.authenticationMethod | default "Forms" | quote }}
            - name: basarr__AUTH__AUTHENTICATIONREQUIRED
              value: {{ .Values.auth.AuthenticationRequired | default "Enabled" | quote }}
            {{- if and .Values.auth.apiKey (not .Values.auth.existingSecret) }}
            - name: basarr__AUTH__APIKEY
              value: {{ .Values.auth.apiKey | quote }}
            {{- else if and .Values.auth.existingSecret.secretName .Values.auth.existingSecret.secretKey }}
            - name: basarr__AUTH__APIKEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.existingSecret.secretName | quote }}
                  key: {{ .Values.auth.existingSecret.secretKey | quote }}
            {{- end }}
            - name: basarr__SERVER__PORT
              value: {{ .Values.service.port | default 6767 | quote }}
          ports:
            - name: basarr-http
              containerPort: {{ .Values.service.port | default 6767 }}
              protocol: TCP
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- $probe := merge (omit .Values.livenessProbe "enabled") (dict "httpGet" (dict "port" (.Values.service.port | default 6767) "path" "/ping")) }}
            {{- $probe | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            {{- $probe := merge (omit .Values.readinessProbe "enabled") (dict "httpGet" (dict "port" (.Values.service.port | default 6767) "path" "/ping")) }}
            {{- $probe | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            {{- $probe := merge (omit .Values.startupProbe "enabled") (dict "httpGet" (dict "port" (.Values.service.port | default 6767) "path" "/ping")) }}
            {{- $probe | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /config
            {{- if .Values.extraVolumes }}
            {{- range $storage := .Values.extraVolumes }}
            - name: {{ $storage.name }}
              mountPath: {{ $storage.mountPath }}
            {{- end }}
            {{- end }}
            {{- if .Values.nfsVolumes }}
            {{- range $nfsstorage := .Values.nfsVolumes }}
            - name: {{ $nfsstorage.name }}
              mountPath: {{ $nfsstorage.mountPath }}
            {{- end }}
            {{- end }}
      volumes:
        {{- if .Values.persistence.enabled }}
        - name: config
          persistentVolumeClaim:
            claimName: {{ include "basarr.fullname" . }}-pvc
        {{- else }}
        - name: config
          emptyDir: {}
        {{- end }}
        {{- range $storage := .Values.extraVolumes }}
        - name: {{ $storage.name }}
          persistentVolumeClaim:
            claimName: {{ $storage.pvcName }}
        {{- end }}
        {{- range $nfsstorage := .Values.nfsVolumes }}
        - name: {{ $nfsstorage.name }}
          nfs:
            server: {{ $nfsstorage.nfs.server }}
            path: {{ $nfsstorage.nfs.path }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- if .Values.metrics.enabled }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ include "basarr.fullname" . }}-exporter
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "basarr-exporter.labels" . | nindent 4 }}
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      {{- include "basarr-exporter.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "basarr-exporter.labels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "monitoring"
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: {{ include "basarr.fullname" . }}
                  app.kubernetes.io/instance: {{ .Release.Name }}
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: basarr-exporter
          image: {{ .Values.metrics.image.registry }}/{{ .Values.metrics.image.repository }}:{{ .Values.metrics.image.tag }}
          imagePullPolicy: {{ .Values.metrics.image.imagePullPolicy }}
          args:
            - basarr
          env:
            - name: PORT
              value: {{ .Values.metrics.containerPort | default 9707 | quote }}
            - name: URL
              value: "http://{{ include "basarr.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.port | default 6767 }}"
            {{- if and .Values.auth.apiKey (not .Values.auth.existingSecret) }}
            - name: APIKEY
              value: {{ .Values.auth.apiKey | quote }}
            {{- else if and .Values.auth.existingSecret.secretName .Values.auth.existingSecret.secretKey }}
            - name: APIKEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.existingSecret.secretName | quote }}
                  key: {{ .Values.auth.existingSecret.secretKey | quote }}
            {{- end }}
          ports:
            - name: metrics
              containerPort: {{ .Values.metrics.containerPort | default 9707 }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics
            failureThreshold: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: metrics
            failureThreshold: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.metrics.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
